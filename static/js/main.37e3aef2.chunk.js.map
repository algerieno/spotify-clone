{"version":3,"sources":["logo.svg","components/Navbar/SideBarOption/SideBarOption.js","utils/DataLayer.js","components/Navbar/Navbar.js","components/MainHeader/MainHeader.js","components/Card/Card.js","auth.js","components/LoginPage/LoginPage.js","components/Main/SongRow/SongRow.js","components/Main/Main.js","components/MusicPlayer/MusicPlayer.js","App.js","serviceWorker.js","utils/reducer.js","index.js"],"names":["module","exports","SideBarOption","title","Icon","color","className","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Navbar","playlist","viewBox","fill","d","HomeOutlinedIcon","SearchIcon","LibraryMusicOutlinedIcon","AddBoxIcon","LoyaltyIcon","map","item","key","ArrowDropDownCircleOutlinedIcon","defaultProps","MainHeader","user","profile_image","fontSize","Avatar","alt","src","split","Card","loginUrl","join","LoginPage","href","SongRow","Main","style","Array","Math","random","MusicPlayer","Grid","container","spacing","xs","Slider","spotify","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","reduce","acc","parts","decodeURIComponent","_token","access_token","console","log","type","payload","setAccessToken","getMe","then","images","url","display_name","getUserPlaylists","result","items","name","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.37e3aef2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./SideBarOption.css\";\n\nfunction SideBarOption({ title, Icon, color }) {\n  return (\n    <div className={\"sidebar_option\"}>\n      {Icon && <Icon className=\"sidebar_option_icon\" color={color} />}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n}\n\nexport default SideBarOption;\n","import React, { useContext, createContext, useReducer } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Navbar.css\";\nimport SideBarOption from \"./SideBarOption/SideBarOption\";\nimport { useDataLayerValue, userDataLaerValue } from \"../../utils/DataLayer\";\n\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicOutlinedIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport LoyaltyIcon from \"@material-ui/icons/Loyalty\";\nimport ArrowDropDownCircleOutlinedIcon from \"@material-ui/icons/ArrowDropDownCircleOutlined\";\n\nconst Navbar = () => {\n  const [{ playlist }] = useDataLayerValue();\n  return (\n    <div className=\"navbar\">\n      <div className=\"logo\">\n        <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo--text\">\n          <title>Spotify</title>\n          <path\n            fill=\"currentColor\"\n            d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"\n          ></path>\n        </svg>\n      </div>\n      <div className=\"list\">\n        <SideBarOption title=\"Home\" Icon={HomeOutlinedIcon} />\n        <SideBarOption title=\"Search\" Icon={SearchIcon} />\n        <SideBarOption title=\"Your Library\" Icon={LibraryMusicOutlinedIcon} />\n      </div>\n      <div className=\"playlists\">\n        <span>playlist</span>\n        <SideBarOption title=\"Create Playlist\" Icon={AddBoxIcon} />\n        <SideBarOption title=\"Liked Songs\" Icon={LoyaltyIcon} color=\"primary\" />\n      </div>\n      <hr className=\"divider\" />\n      <div className=\"customPlaylists\">\n        <ul>\n          {playlist.map((item) => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"installApp\">\n        <SideBarOption\n          title=\"Install App\"\n          Icon={ArrowDropDownCircleOutlinedIcon}\n        />\n      </div>\n    </div>\n  );\n};\nNavbar.propTypes = {};\n\nNavbar.defaultProps = {};\n\nexport default Navbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./MainHeader.css\";\nimport { useDataLayerValue } from \"../../utils/DataLayer\";\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\nimport ArrowForwardIosSharpIcon from \"@material-ui/icons/ArrowForwardIosSharp\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nconst MainHeader = () => {\n  const [{ user, profile_image }] = useDataLayerValue();\n  return (\n    <div className=\"header\">\n      <div className=\"navigation_buttons\">\n        <button className=\"previous\">\n          <ArrowBackIosOutlinedIcon fontSize=\"small\" />\n        </button>\n        <button className=\"next\">\n          <ArrowForwardIosSharpIcon fontSize=\"small\" />\n        </button>\n      </div>\n      <div className=\"action_buttons\">\n        <button className=\"upgradebtn\">\n          <strong>Upgrade</strong>\n        </button>\n        <button className=\"profilebtn\">\n          <Avatar alt=\"Remy Sharp\" src=\"\" className=\"avatar_image\" />\n          <div className=\"profile_name\">\n            <h4>{user ? user.split(\" \")[0] : \"John\"}</h4>\n          </div>\n          <ArrowDropDownIcon />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nMainHeader.propTypes = {};\n\nMainHeader.defaultProps = {};\n\nexport default MainHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Card.css\";\n\nconst Card = () => <div className=\"Card\">Card Component</div>;\n\nCard.propTypes = {};\n\nCard.defaultProps = {};\n\nexport default Card;\n","export const auth = false;\n\nconst AuthEndPoint = \"https://accounts.spotify.com/authorize\";\nconst clienID = \"2d485af578294da98ffde94fe379c5d4\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const loginUrl = `${AuthEndPoint}?redirect_uri=${redirectUri}&client_id=${clienID}&response_type=token&scope=${scopes.join(\n  \"%20\"\n)}&show_dialog=true`;\n\nexport const getTokenFromUrl = () =>\n  window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((acc, item) => {\n      let parts = item.split(\"=\");\n      acc[parts[0]] = decodeURIComponent(parts[1]);\n      return acc;\n    }, {});\n","import React from \"react\";\nimport \"./LoginPage.css\";\nimport { loginUrl } from \"../../auth\";\n\nconst LoginPage = () => {\n  return (\n    <div className=\"LoginPage\">\n      <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo--text\">\n        <title>Spotify</title>\n        <path\n          fill=\"white\"\n          d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"\n        ></path>\n      </svg>\n      <a href={loginUrl}>Login To Spotify</a>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport \"./SongRow.css\";\n\nfunction SongRow() {\n  return (\n    <div className=\"songRow\">\n      <div className=\"song_title\">\n        <div className=\"song_image\">\n          <img\n            src=\"https://newjams-images.scdn.co/v2/discover-weekly/pOdnPTRma6KZzKPNRN9oUA==/bmVuZW5lbmVuZW5lbmVuZQ==/default\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"song_description\">\n          <h3>Song Title</h3>\n          <span className=\"song_artist\">Artist</span>\n        </div>\n      </div>\n\n      <div className=\"album_name\">S.L.N Boys</div>\n      <div className=\"song_time\">2:09</div>\n    </div>\n  );\n}\n\nexport default SongRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Main.css\";\nimport MainHeader from \"../MainHeader/MainHeader\";\nimport Card from \"../Card/Card\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport SongRow from \"./SongRow/SongRow\";\n\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst Main = () => {\n  return (\n    <div className=\"Main\">\n      <div className=\"mainHeader\">\n        <MainHeader />\n      </div>\n\n      <div className=\"content\">\n        <div className=\"banner\">\n          <img\n            src=\"https://newjams-images.scdn.co/v2/discover-weekly/pOdnPTRma6KZzKPNRN9oUA==/bmVuZW5lbmVuZW5lbmVuZQ==/default\"\n            alt=\"\"\n          />\n\n          <div className=\"header_album_info\">\n            <h4>PLAYLIST</h4>\n            <h1>Discover Weekly</h1>\n            <p>\n              Your weekly mixtape of fresh music. Enjoy new music and deep cuts\n              picked for you. Updates every Monday.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"album_action_buttons\">\n          <PlayCircleFilledWhiteIcon\n            className=\"big_play_button\"\n            style={{ color: \"#1db954\" }}\n          />\n          <FavoriteBorderIcon fontSize=\"large\" />\n          <MoreHorizIcon fontSize=\"large\" />\n        </div>\n\n        <hr className=\"album_divider\" />\n\n        <div className=\"ablum_playlist\">\n          {Array(10)\n            .fill(0)\n            .map((item) => (\n              <SongRow key={Math.random()} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./MusicPlayer.css\";\nimport PlayCircleOutlineOutlinedIcon from \"@material-ui/icons/PlayCircleOutlineOutlined\";\nimport SkipPreviousOutlinedIcon from \"@material-ui/icons/SkipPreviousOutlined\";\nimport SkipNextOutlinedIcon from \"@material-ui/icons/SkipNextOutlined\";\nimport ShuffleOutlinedIcon from \"@material-ui/icons/ShuffleOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport VolumeUpOutlinedIcon from \"@material-ui/icons/VolumeUpOutlined\";\nimport PlaylistPlayOutlinedIcon from \"@material-ui/icons/PlaylistPlayOutlined\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst MusicPlayer = () => (\n  <div className=\"MusicPlayer\">\n    <div className=\"footer_left\">\n      <div className=\"album_logo\">\n        <img\n          src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"album_info\">\n        <h5>Album name</h5>\n        <p>song name</p>\n      </div>\n    </div>\n    <div className=\"footer_center\">\n      <div className=\"center_icons\">\n        <ShuffleOutlinedIcon className=\"green_icon\" />\n        <SkipPreviousOutlinedIcon />\n        <PlayCircleOutlineOutlinedIcon fontSize=\"large\" />\n        <SkipNextOutlinedIcon />\n        <RepeatOutlinedIcon className=\"green_icon\" />\n      </div>\n    </div>\n    <div className=\"footer_right\">\n      <div className=\"right_icons\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <VolumeUpOutlinedIcon className=\"right_icon\" />\n          </Grid>\n          <Grid item>\n            <PlaylistPlayOutlinedIcon className=\"right_icon\" />\n          </Grid>\n          <Grid item xs>\n            <Slider className=\"green_icon\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  </div>\n);\n\nexport default MusicPlayer;\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Main from \"./components/Main/Main\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport { getTokenFromUrl } from \"./auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./utils/DataLayer\";\nimport MusicPlayer from \"./components/MusicPlayer/MusicPlayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // const [token, setToken] = useState(null);\n  const [{ user, token, playlist }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    //_token = token;\n    if (_token) {\n      console.log(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        payload: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        console.log(user);\n        if (user.images[0]) {\n          dispatch({\n            type: \"SET_IMAGE\",\n            payload: user.images[0].url,\n          });\n        }\n\n        dispatch({\n          type: \"SET_USER\",\n          payload: user.display_name,\n        });\n      });\n      spotify.getUserPlaylists().then((result) => {\n        dispatch({\n          type: \"SET_PLAYLIST\",\n          payload: result.items.map((item) => item.name),\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"outwrapper\">\n      {!token ? (\n        <div className=\"unlogged\">\n          <LoginPage />\n        </div>\n      ) : (\n        <div className=\"logged\">\n          <div className=\"App\">\n            <Navbar />\n            <Main />\n          </div>\n          <div className=\"musicplayer\">\n            <MusicPlayer />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n  profile_image: null,\n  playlist: [],\n  playing: false,\n  item: null,\n  token:\n    \"BQB8POEN2q7Rj4ft2iEcP1iIV3uR2iUq6_cv8PxKfF20eqG_R2sWA1X56lIEfSCpXnqqsWIlpPieQuuK7TUyI68qaSZTIkFM8Fjx5XBedjck7SYjjHKGIq0y9jQDldxrLUU7IONv2cT8HxnQKAq1cNzkMPjKQv7vLOjXM4jxh6Wdor_j\",\n};\n\nconst reducer = (state, action) => {\n  console.log(\"reducer called for \", action.type);\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.payload,\n      };\n    case \"SET_PLAYLIST\":\n      return {\n        ...state,\n        playlist: action.payload,\n      };\n    case \"SET_IMAGE\":\n      return {\n        ...state,\n        profile_image: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./utils/DataLayer\";\nimport reducer, { initialState } from \"./utils/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}